"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initializeKakaoSDK = exports.getKeyHashAndroid = exports.default = void 0;
Object.defineProperty(exports, "kAssert", {
  enumerable: true,
  get: function () {
    return _kAssert.kAssert;
  }
});
Object.defineProperty(exports, "kCreateWebError", {
  enumerable: true,
  get: function () {
    return _kCreateWebError.kCreateWebError;
  }
});
Object.defineProperty(exports, "kFetch", {
  enumerable: true,
  get: function () {
    return _kFetch.kFetch;
  }
});
Object.defineProperty(exports, "kFetchFormUrlEncoded", {
  enumerable: true,
  get: function () {
    return _kFetch.kFetchFormUrlEncoded;
  }
});
Object.defineProperty(exports, "kGlobalStorage", {
  enumerable: true,
  get: function () {
    return _kGlobalStorage.default;
  }
});
Object.defineProperty(exports, "kRunWebAPI", {
  enumerable: true,
  get: function () {
    return _kRunWebAPI.kRunWebAPI;
  }
});
var _kAssert = require("./util/kAssert");
var _kCreateWebError = require("./util/kCreateWebError");
var _kFetch = require("./util/kFetch");
var _kGlobalStorage = _interopRequireDefault(require("./util/kGlobalStorage"));
var _kRunWebAPI = require("./util/kRunWebAPI");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const KakaoCore = {
  getKeyHashAndroid: async () => {
    return undefined;
  },
  initializeKakaoSDK: async (appKey, options) => {
    var _options$web, _options$web2;
    (0, _kAssert.kAssert)(options === null || options === void 0 || (_options$web = options.web) === null || _options$web === void 0 ? void 0 : _options$web.javascriptKey, '[initializeKakaoSDK] javascriptKey is missing');
    (0, _kAssert.kAssert)(options === null || options === void 0 || (_options$web2 = options.web) === null || _options$web2 === void 0 ? void 0 : _options$web2.restApiKey, '[initializeKakaoSDK] restApiKey is missing');
    await (0, _kRunWebAPI.kRunWebAPI)(() => {
      var _options$web3, _options$web4;
      _kGlobalStorage.default.javascriptKey = options === null || options === void 0 || (_options$web3 = options.web) === null || _options$web3 === void 0 ? void 0 : _options$web3.javascriptKey;
      _kGlobalStorage.default.restApiKey = options === null || options === void 0 || (_options$web4 = options.web) === null || _options$web4 === void 0 ? void 0 : _options$web4.restApiKey;
      if (!Kakao.isInitialized()) {
        Kakao.init(options.web.javascriptKey);
      }
      (0, _kAssert.kAssert)(Kakao.isInitialized(), 'Kakao.isInitialized returns false');
    });
  }
};
const {
  getKeyHashAndroid,
  initializeKakaoSDK
} = KakaoCore;
exports.initializeKakaoSDK = initializeKakaoSDK;
exports.getKeyHashAndroid = getKeyHashAndroid;
var _default = exports.default = KakaoCore;
//# sourceMappingURL=index.web.js.map