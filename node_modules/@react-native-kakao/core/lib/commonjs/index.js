"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.getKeyHashAndroid = getKeyHashAndroid;
exports.initializeKakaoSDK = initializeKakaoSDK;
Object.defineProperty(exports, "kAssert", {
  enumerable: true,
  get: function () {
    return _kAssert.kAssert;
  }
});
Object.defineProperty(exports, "kCreateWebError", {
  enumerable: true,
  get: function () {
    return _kCreateWebError.kCreateWebError;
  }
});
Object.defineProperty(exports, "kFetch", {
  enumerable: true,
  get: function () {
    return _kFetch.kFetch;
  }
});
Object.defineProperty(exports, "kFetchFormUrlEncoded", {
  enumerable: true,
  get: function () {
    return _kFetch.kFetchFormUrlEncoded;
  }
});
Object.defineProperty(exports, "kGlobalStorage", {
  enumerable: true,
  get: function () {
    return _kGlobalStorage.default;
  }
});
Object.defineProperty(exports, "kRunWebAPI", {
  enumerable: true,
  get: function () {
    return _kRunWebAPI.kRunWebAPI;
  }
});
var _reactNative = require("react-native");
var _kAssert = require("./util/kAssert");
var _kCreateWebError = require("./util/kCreateWebError");
var _kFetch = require("./util/kFetch");
var _kGlobalStorage = _interopRequireDefault(require("./util/kGlobalStorage"));
var _kRunWebAPI = require("./util/kRunWebAPI");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const LINKING_ERROR = "The package '@react-native-kakao/core' doesn't seem to be linked. Make sure: \n\n" + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo Go\n';
const isTurboModuleEnabled = global.__turboModuleProxy != null;
const Module = isTurboModuleEnabled ? require('./spec/NativeKakaoCore').default : _reactNative.NativeModules.RNCKakaoCore;
const Native = Module ? Module : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
async function initializeKakaoSDK(appKey,
// eslint-disable-next-line @typescript-eslint/no-unused-vars
options) {
  Native.initializeKakaoSDK(appKey);
}
function getKeyHashAndroid() {
  return Native.getKeyHashAndroid();
}
const KakaoCore = {
  initializeKakaoSDK,
  getKeyHashAndroid
};
var _default = exports.default = KakaoCore;
//# sourceMappingURL=index.js.map